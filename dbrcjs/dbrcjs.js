// Generated by CoffeeScript 1.4.0
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  window.dbrc_injection = (function() {
    var DBRCInjection;
    DBRCInjection = (function() {

      function DBRCInjection() {
        this.display_screen_id = __bind(this.display_screen_id, this);

        this.show_file = __bind(this.show_file, this);
        this.id = Math.floor(Math.random() * 100000000) + 1;
        this.my_screen = new dbrc.Screen(this.id, this.show_file, function() {
          return console.log('raw handler unimplemented');
        }, this.display_screen_id);
      }

      DBRCInjection.prototype.show_file = function(url) {
        console.log("showing file at " + url);
        this.my_preview = new window.PhotoPreview('filename', 'fully_qualified_path', url, url, 'display_time', 'shmodel_link_here');
        window.FilePreviewModal.init([this.my_preview]);
        return window.FilePreviewModal.show();
      };

      DBRCInjection.prototype.display_screen_id = function(screen_id) {
        return jQuery('#main-nav').append("<li style='display: block; padding: 7px; margin-top: 100%; font-size: 14px; color: #1F8CE6; text-decoration: none;'>Screen id:<span style='color: #333; margin-left: 10px'>" + screen_id + "</span></li>");
      };

      return DBRCInjection;

    })();
    return {
      DBRCInjection: DBRCInjection
    };
  })();

  window.dbrc = (function() {
    var HOST, Screen;
    HOST = 'http://ec2-54-235-229-59.compute-1.amazonaws.com';
    Screen = (function() {

      function Screen(device_id, url_handler, raw_handler, display_screen_id) {
        this.listen_longpoll = __bind(this.listen_longpoll, this);

        var _this = this;
        this.url_handler = url_handler;
        this.raw_handler = raw_handler;
        this.device_id = device_id;
        this.screen_id = void 0;
        console.log('initializing screen');
        jQuery.ajax({
          type: "POST",
          url: "" + HOST + "/screens/",
          contentType: "application/json; charset=utf-8",
          data: JSON.stringify({
            device_id: this.device_id,
            device_name: "device_" + device_id
          }),
          dataType: "json",
          success: function(msg) {
            if (msg.screen_id) {
              console.log("starting screen " + msg.screen_id);
              _this.screen_id = msg.screen_id;
              display_screen_id(_this.screen_id);
              return _this.listen_longpoll();
            } else {
              return alert("wtf is this?\n" + msg);
            }
          },
          error: function() {
            return alert("something broke");
          }
        });
      }

      Screen.prototype.listen_longpoll = function() {
        var _this = this;
        return jQuery.get("" + HOST + "/screens/" + this.screen_id, function(msg) {
          var data, reconnectFails;
          reconnectFails = 0;
          console.log('message recieved: ', msg);
          if (msg.result === 'ok') {
            data = JSON.parse(msg.data);
            if (data.url) {
              return _this.url_handler(data.url);
            } else {
              return _this.raw_handler(data);
            }
          } else if (msg.result === 'resubscribe') {
            return _this.listen_longpoll();
          } else {
            return console.log('weird message', msg);
          }
        }, 'json').error(function() {
          console.log('dealing with an error');
          return setTimeout(_this.listen_longpoll, 2000);
        });
      };

      return Screen;

    })();
    return {
      Screen: Screen
    };
  })();

}).call(this);
